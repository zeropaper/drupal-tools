{"version":3,"sources":["webpack:///webpack/bootstrap b9844b2630406ff16fba","webpack:///external \"fs-extra\"","webpack:///./src/index.js","webpack:///external \"path\"","webpack:///external \"child_process\"","webpack:///external \"util\"","webpack:///external \"glob\"","webpack:///external \"yaml-js\"","webpack:///./src/implementations ^\\.\\/.*\\.js$","webpack:///./src/implementations/block.module.js","webpack:///./src/implementations/comment.module.js"],"names":[],"mappings":"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","file":"index.js","sourcesContent":[" \t// The module cache\n \tvar installedModules = {};\n\n \t// The require function\n \tfunction __webpack_require__(moduleId) {\n\n \t\t// Check if module is in cache\n \t\tif(installedModules[moduleId]) {\n \t\t\treturn installedModules[moduleId].exports;\n \t\t}\n \t\t// Create a new module (and put it into the cache)\n \t\tvar module = installedModules[moduleId] = {\n \t\t\ti: moduleId,\n \t\t\tl: false,\n \t\t\texports: {}\n \t\t};\n\n \t\t// Execute the module function\n \t\tmodules[moduleId].call(module.exports, module, module.exports, __webpack_require__);\n\n \t\t// Flag the module as loaded\n \t\tmodule.l = true;\n\n \t\t// Return the exports of the module\n \t\treturn module.exports;\n \t}\n\n\n \t// expose the modules object (__webpack_modules__)\n \t__webpack_require__.m = modules;\n\n \t// expose the module cache\n \t__webpack_require__.c = installedModules;\n\n \t// define getter function for harmony exports\n \t__webpack_require__.d = function(exports, name, getter) {\n \t\tif(!__webpack_require__.o(exports, name)) {\n \t\t\tObject.defineProperty(exports, name, {\n \t\t\t\tconfigurable: false,\n \t\t\t\tenumerable: true,\n \t\t\t\tget: getter\n \t\t\t});\n \t\t}\n \t};\n\n \t// getDefaultExport function for compatibility with non-harmony modules\n \t__webpack_require__.n = function(module) {\n \t\tvar getter = module && module.__esModule ?\n \t\t\tfunction getDefault() { return module['default']; } :\n \t\t\tfunction getModuleExports() { return module; };\n \t\t__webpack_require__.d(getter, 'a', getter);\n \t\treturn getter;\n \t};\n\n \t// Object.prototype.hasOwnProperty.call\n \t__webpack_require__.o = function(object, property) { return Object.prototype.hasOwnProperty.call(object, property); };\n\n \t// __webpack_public_path__\n \t__webpack_require__.p = \"\";\n\n \t// Load entry module and return exports\n \treturn __webpack_require__(__webpack_require__.s = 1);\n\n\n\n// WEBPACK FOOTER //\n// webpack/bootstrap b9844b2630406ff16fba","module.exports = require(\"fs-extra\");\n\n\n//////////////////\n// WEBPACK FOOTER\n// external \"fs-extra\"\n// module id = 0\n// module chunks = 0","const { resolve, relative, basename, dirname } = require('path');\nconst { statSync, readFile } = require('fs-extra');\nconst { remove, ensureDir, readJson, writeJson } = require('fs-extra');\nconst { exec, spawn } = require('child_process');\nconst { promisify } = require('util');\nconst glob = require('glob');\nconst yaml = require('yaml-js');\n\nconst execAsync = promisify(exec);\n\nconst unique = array => array.reduce((acc, item) => {\n  if (!item || acc.indexOf(item) > -1) return acc;\n  acc.push(item);\n  return acc;\n}, []);\n\nexport class Model {\n  constructor(info, idKey, collection = null) {\n    this.idKey = idKey;\n    this.objectKeys = Object.keys(info || {});\n    // eslint-disable-next-line no-return-assign\n    this.objectKeys.forEach(key => this[key] = info[key]);\n    this.collection = collection;\n  }\n\n  get id() {\n    return this[this.idKey];\n  }\n\n  toJSON() {\n    const obj = {};\n    // eslint-disable-next-line no-return-assign\n    this.objectKeys.forEach(key => obj[key] = this[key]);\n    return obj;\n  }\n}\n\nexport class Collection {\n  // eslint-disable-next-line no-shadow\n  constructor(Model, data) {\n    this.Model = Model;\n    this._data = [];\n    this.reset(data);\n  }\n\n  get data() {\n    return this._data;\n  }\n\n  get length() {\n    return this._data.length;\n  }\n\n  toJSON() {\n    return this._data.map(item => item.toJSON());\n  }\n\n  add(info = {}) {\n    const model = new this.Model(info, this);\n    const exists = this._data.findIndex(item => item.id === model.id);\n    if (exists > -1) {\n      // replace\n    } else {\n      this._data.push(model);\n    }\n    return this;\n  }\n\n  reset(data) {\n    data.forEach(this.add);\n    return this;\n  }\n\n  map(cb) {\n    return this._data.map(cb);\n  }\n\n  find(cb) {\n    return this._data.find(cb);\n  }\n\n  findBy(key, value) {\n    return this.find(item => item[key] === value);\n  }\n\n  filter(cb) {\n    return this._data.filter(cb);\n  }\n\n  filterBy(key, value) {\n    return this.filter(item => item[key] === value);\n  }\n\n  forEach(cb) {\n    this._data.forEach(cb);\n    return this;\n  }\n}\n\n\nexport class DrupalSite extends Model {\n  constructor(info = {}, collection = null) {\n    super(info, 'machine name', collection);\n    // eslint-disable-next-line no-console\n    // console.log('new DrupalSite()', this.id);\n  }\n}\n\nexport class DrupalLibrary extends Model {\n  constructor(info = {}, collection = null) {\n    super(info, 'machine name', collection);\n    // eslint-disable-next-line no-console\n    // console.log('new DrupalLibrary()', this.id);\n  }\n}\n\nexport class DrupalModule extends Model {\n  constructor(info = {}, collection = null) {\n    super(info, 'machine name', collection);\n    // eslint-disable-next-line no-console\n    // console.log('new DrupalModule()', this.id);\n  }\n\n  get dependencyTree() {\n    const { collection, dependencies = [] } = this;\n    let deps = dependencies;\n    deps.forEach((name) => {\n      const dep = collection.findBy('id', name);\n      if (!dep) {\n        // eslint-disable-next-line no-console\n        console.warn('could not determine dependency', name);\n        return;\n      }\n      deps = [...deps, name, ...dep.dependencyTree];\n    });\n    return unique(deps);\n  }\n}\n\nexport class DrupalThemeEngine extends Model {\n  constructor(info = {}, collection = null) {\n    super(info, 'machine name', collection);\n    // eslint-disable-next-line no-console\n    // console.log('new DrupalThemeEngine()', this.id);\n  }\n}\n\nexport class DrupalTheme extends Model {\n  constructor(info = {}, collection = null) {\n    super(info, 'machine name', collection);\n    // eslint-disable-next-line no-console\n    // console.log('new DrupalTheme()', this.id);\n  }\n\n  get baseThemes() {\n    const baseTheme = this.collection.findBy('machine name', this['base theme']);\n    return baseTheme ? [baseTheme.id, ...baseTheme.baseThemes] : [];\n  }\n}\n\nexport class DrupalVendor extends Model {\n  constructor(info = {}, collection = null) {\n    super(info, 'machine name', collection);\n    // eslint-disable-next-line no-console\n    // console.log('new DrupalVendor()', this.id);\n  }\n}\n\n\nconst cmd2JSON = result => ({\n  stdout: JSON.parse(result.stdout || 'null'),\n  stderr: result.stderr,\n});\n\nexport default class Drupal {\n  constructor({\n    rootPath,\n    siteURI,\n    drushBin = './vendor/bin/drush',\n    composerBin = 'composer',\n    themeName = 'bartik', // based on \"classy\"\n    adminThemeName = 'seven',\n    activeModuleNames = [],\n  }) {\n    if (!statSync(rootPath).isDirectory()) {\n      throw new Error(`\"${rootPath}\" is not a directory.`);\n    }\n    this.siteURI = siteURI;\n    this.rootPath = rootPath;\n    this.drushBin = drushBin;\n    this.composerBin = composerBin;\n    this.themeName = themeName;\n    this.adminThemeName = adminThemeName;\n    this.activeModuleNames = activeModuleNames || [];\n\n    this.sites = new Collection(DrupalSite, []);\n    this.themes = new Collection(DrupalTheme, []);\n    this.modules = new Collection(DrupalModule, []);\n    this.libraries = new Collection(DrupalLibrary, []);\n    this.engines = new Collection(DrupalThemeEngine, []);\n    this.vendors = new Collection(DrupalVendor, []);\n  }\n\n  get site() {\n    return this.sites.findBy('id', this.siteURI);\n  }\n\n  get theme() {\n    return this.themes.findBy('id', this.themeName);\n  }\n\n  get adminTheme() {\n    return this.themes.findBy('id', this.adminThemeName);\n  }\n\n  get activeModules() {\n    return this.modules.filter(module => this.activeModuleNames.contains(module.id));\n  }\n\n  get searchPattern() {\n    return `{modules,themes,core/modules,core/themes,sites/{all,${this.siteURI}}}`;\n  }\n\n  absPath(file) {\n    return `${this.rootPath}/${file}`;\n  }\n\n  typeToCollection(type) {\n    return {\n      theme: this.themes,\n      module: this.modules,\n      theme_engine: this.engines,\n      vendor: this.vendors,\n      site: this.sites,\n      library: this.libraries,\n    }[type];\n  }\n\n  async readInfoFile(file) {\n    const allTemplates = this._scanned.templates;\n    const machineName = basename(basename(file, '.info.yml'), '.info.yaml');\n    const content = await readFile(this.absPath(file), 'utf8');\n    const info = yaml.load(content);\n\n    /* eslint-disable  */\n    let js = {};\n    try {\n      js = require(`${__dirname}/core/${machineName}.${info.type}.js`);\n    } catch (e) {\n      try {\n        js = require(`${__dirname}/implementations/${machineName}.${info.type}.js`);\n      } catch (e) {\n        // eslint-disable-next-line no-console\n        console.warn('drupal-tools no implementation for \"%s\" module.', machineName);\n      }\n    }\n    /* eslint-enable  */\n\n    const infoDirPath = dirname(file);\n    const templates = {};\n    allTemplates\n      .forEach((filepath) => {\n        if (filepath.indexOf(infoDirPath) !== 0 || filepath.indexOf('.html.twig') < 1) return;\n        const name = filepath.split('-').join('_');\n        templates[name] = filepath;\n      });\n\n    // eslint-disable-next-line no-console\n    console.log('templates for %s %s', machineName, info.type, js);\n    return {\n      ...info,\n      js,\n      templates,\n      'info file': file,\n      'machine name': machineName,\n    };\n  }\n\n  async readInfo(force) {\n    const self = this;\n    if (self._info && !force) return self._info;\n    const scannedInfo = (this._scanned || { info: [] }).info || [];\n\n    return Promise.all(scannedInfo.map(file => this.readInfoFile(file)))\n      .then((infoArr) => {\n        const mapped = {};\n        infoArr.forEach((info) => {\n          if (!info.type) return;\n          mapped[info.type] = mapped[info.type] || [];\n          mapped[info.type].push(info);\n          const collection = self.typeToCollection(info.type);\n          if (collection) {\n            collection.add(info);\n          } else {\n            // eslint-disable-next-line no-console\n            console.log('no collection for %s', info.type);\n          }\n        });\n        self._info = mapped;\n        return mapped;\n      });\n  }\n\n  getFilename(type, name, filename = null) {\n    const found = this._info[type]\n      .find(info => name === info['machine name']);\n    if (!found) return false;\n    return `${dirname(found['info file'])}${filename ? `/${filename}` : ''}`;\n  }\n\n  getPath(type, name) {\n    return this.getFilename(type, name);\n  }\n\n  // eslint-disable-next-line\n  getTemplate(name) {\n    // eslint-disable-next-line\n    console.info('getTemplate theme', this.theme);\n    // eslint-disable-next-line\n    console.info('getTemplate activeModules', this.activeModules);\n    return false;\n  }\n\n  invokeAll(hook, args) {\n    // use this.activeModules instead!\n    this.modules.forEach((item) => {\n      if (!item.js || typeof item.js[hook] !== 'function') return;\n      item.js[hook](...args);\n    });\n  }\n\n  invokeTheme(hook, args) {\n    // run the hook on the base themes first\n    const themes = this.theme.baseThemes;\n    themes.forEach((item) => {\n      if (!item.js || typeof item.js[hook] !== 'function') return;\n      item.js[hook](...args);\n    });\n\n    if (!this.theme.js || typeof this.theme.js[hook] !== 'function') return;\n    this.theme.js[hook](...args);\n  }\n\n  preprocess(hook, variables) {\n    // eslint-disable-next-line no-param-reassign\n    variables.theme_hook_original = hook;\n\n    this.invokeAll('preprocess', [variables, hook]);\n    this.invokeAll(`preprocess_${hook}`, [variables]);\n\n    // theme engines?\n\n    this.invokeTheme('preprocess', [variables, hook]);\n    this.invokeTheme(`preprocess_${hook}`, [variables]);\n  }\n\n  // see https://api.drupal.org/api/drupal/core%21modules%21block%21templates%21block.html.twig/8.5.x\n  // $elements = array(\n  //   '#theme' => 'block',\n  //   'content' => '--block content--',\n  //   '#configuration' => array(\n  //     'label_display' => true,\n  //     'label' => '--block config label--',\n  //     'provider' => 'provider_a_b',\n  //   ),\n  //   '#attributes' => array('class' => array('custom-class')),\n  // );\n  // return htmlentities(\\Drupal::service('renderer')\n  //     ->render($elements, FALSE));\n  render(name, variables, options = {}) {\n    const { debug } = options;\n    const output = `Missing theme implementation for \"${name}\".`;\n    let prefix = '';\n    const suffix = '';\n\n    this.preprocess(name, variables);\n\n    // const template = this.getTemplate();\n\n    if (debug) {\n      prefix = `\\n<!-- THEME ${name} Start -->${prefix}`;\n      prefix = `${suffix}<!-- THEME ${name} End -->\\n`;\n    }\n\n    return `${prefix}${output}${suffix}`;\n  }\n\n  binExec(cmd, opts = {}) {\n    return execAsync(cmd, {\n      cwd: this.rootPath,\n      maxBuffer: Infinity,\n      ...opts,\n    }).then(cmd2JSON);\n  }\n\n  drush(cmd) {\n    return this.binExec(`${this.drushBin} --uri=${this.siteURI} ${cmd} --format=json`);\n  }\n\n  composer(cmd) {\n    return this.binExec(`${this.composerBin} --format=json ${cmd}`);\n  }\n\n  scan(force) {\n    if (force && this._scanned) return this._scanned;\n    this._scanned = false;\n    const { searchPattern, rootPath } = this;\n    const fileTypes = {\n      info: 'info.{yml,yaml}',\n      styles: '{css,scss,sass,less}',\n      scripts: '{js,jsx}',\n      templates: 'html.twig',\n    };\n    const fileTypeNames = Object.keys(fileTypes);\n\n    const opts = {\n      root: rootPath,\n      // debug: true,\n    };\n\n    const toObject = (groups) => {\n      const mapped = {};\n      groups.forEach((files, g) => {\n        mapped[fileTypeNames[g]] = files;\n      });\n      this._scanned = mapped;\n      return mapped;\n    };\n\n    const processFiles = files => files\n      .map(file => relative(opts.root, file))\n      .filter(file => file.indexOf('test') < 0);\n\n    const globCb = (res, rej) => (err, files) => {\n      if (err) {\n        rej(err);\n        return;\n      }\n      res(processFiles(files));\n    };\n\n    const makePromise = (fileType) => {\n      const extension = fileTypes[fileType];\n      const globPattern = `/${searchPattern}/**/*.${extension}`;\n\n      return new Promise((res, rej) => {\n        glob(globPattern, opts, globCb(res, rej));\n      });\n    };\n\n    return Promise.all(fileTypeNames.map(makePromise))\n      .then(toObject);\n  }\n\n  // https://hub.docker.com/r/wadmiraal/drupal/\n  static async dockerInstall(options = {}) {\n    const {\n      // eslint-disable-next-line\n      destination = './drupal',\n      // eslint-disable-next-line\n      version = '8',\n    } = options;\n    // ensure destination directory\n    // -- set cwd to destination\n    // download: https://raw.githubusercontent.com/wadmiraal/docker-drupal/master/Dockerfile\n    // run: docker build -t yourname/drupal .\n  }\n\n  static async dockerRun() {\n    // eslint-disable-next-line max-len\n    // docker run -d -p 8080:80 -v `pwd`/modules:/var/www/sites/all/modules/custom -t wadmiraal/drupal\n  }\n\n  static async composerInstall(options = {}) {\n    const {\n      composerBin = 'composer',\n      destination = './drupal',\n      composerOptions = {},\n      version = '8.x-dev',\n      stability = 'dev',\n      siteURI = 'default',\n      // removeBefore = false,\n    } = options;\n\n    // const composerCreateProject = () => new Promise((res, rej) => {\n    //   // eslint-disable-next-line no-console\n    //   console.log('create-project: composer');\n    //   const args = [\n    //     'create-project',\n    //     `drupal-composer/drupal-project:${version}`,\n    //     destination,\n    //     '--stability',\n    //     stability,\n    //     '--no-interaction',\n    //   ];\n\n    //   const proc = spawn(composerBin, args);\n    //   let stderr = '';\n    //   proc.stderr.on('data', (data) => {\n    //     stderr += data;\n    //   });\n    //   proc.on('close', (code) => {\n    //     if (code !== 0) {\n    //       // eslint-disable-next-line no-console\n    //       console.error('stderr', stderr);\n    //       rej(new Error(`Process exited with code \"${code}\".`));\n    //       return;\n    //     }\n    //     res();\n    //   });\n    //   proc.on('error', rej);\n    // });\n\n\n    const actions = [\n      async () => {\n        // eslint-disable-next-line no-console\n        console.log('create-project: remove destination');\n        await remove(destination);\n      },\n\n      () => new Promise((res, rej) => {\n        // eslint-disable-next-line no-console\n        console.log('create-project: composer');\n        const args = [\n          'create-project',\n          `drupal-composer/drupal-project:${version}`,\n          destination,\n          '--stability',\n          stability,\n          '--no-interaction',\n        ];\n\n        const proc = spawn(composerBin, args);\n        let stderr = '';\n        proc.stderr.on('data', (data) => {\n          stderr += data;\n        });\n        proc.on('close', (code) => {\n          if (code !== 0) {\n            // eslint-disable-next-line no-console\n            console.error('stderr', stderr);\n            rej(new Error(`Process exited with code \"${code}\".`));\n            return;\n          }\n          res();\n        });\n        proc.on('error', rej);\n      }),\n\n      async () => {\n        // eslint-disable-next-line no-console\n        console.log('create-project: override composer.json');\n        const composerJsonPath = resolve(`${destination}/composer.json`);\n        let composerJson = await readJson(composerJsonPath);\n        composerJson = {\n          ...composerJson,\n          ...composerOptions,\n        };\n        await writeJson(composerJsonPath, composerJson, { spaces: 2 });\n      },\n\n      async () => {\n        // eslint-disable-next-line no-console\n        console.log('create-project: create site directories');\n        return ensureDir(`${destination}/sites/${siteURI}/files`);\n      },\n\n      async () => {\n        // eslint-disable-next-line no-console\n        console.log('create-project: create settings.php');\n      },\n\n      async () => {\n        // eslint-disable-next-line no-console\n        console.log('create-project: create local.settings.php');\n      },\n\n      async () => {\n        // eslint-disable-next-line no-console\n        console.log('create-project: display server configuration');\n        // eslint-disable-next-line no-console\n        console.log(`- Edit the ${destination}/sites/sites.php file\n\n- Add \"0.0.0.0\\t${siteURI}\" to your hosts file (/etc/hosts)\n\n- Create a file called ${siteURI}.conf in /etc/apache2/sites-available with the following content:\n\n  <VirtualHost *:80>\n    # The ServerName directive sets the request scheme, hostname and port that\n    # the server uses to identify itself. This is used when creating\n    # redirection URLs. In the context of virtual hosts, the ServerName\n    # specifies what hostname must appear in the request's Host: header to\n    # match this virtual host. For the default virtual host (this file) this\n    # value is not decisive as it is used as a last resort host regardless.\n    # However, you must set it for any further virtual host explicitly.\n    ServerName ${siteURI}\n    ServerAlias *.${siteURI}\n\n    ServerAdmin webmaster@${siteURI}\n    DocumentRoot ${destination}\n\n    # Available loglevels: trace8, ..., trace1, debug, info, notice, warn,\n    # error, crit, alert, emerg.\n    # It is also possible to configure the loglevel for particular\n    # modules, e.g.\n    #LogLevel info ssl:warn\n\n    # ErrorLog $\\{APACHE_LOG_DIR}/error.log\n    # CustomLog $\\{APACHE_LOG_DIR}/access.log combined\n    ErrorLog ${destination}/error.log\n    CustomLog ${destination}/access.log combined\n\n    # For most configuration files from conf-available/, which are\n    # enabled or disabled at a global level, it is possible to\n    # include a line for only one particular virtual host. For example the\n    # following line enables the CGI configuration for this host only\n    # after it has been globally disabled with \"a2disconf\".\n    #Include conf-available/serve-cgi-bin.conf\n    <Directory />\n      Options FollowSymLinks\n      AllowOverride All\n      Require all granted\n    </Directory>\n  </VirtualHost>\n\n- Enable the new Apache host: sudo a2ensite /etc/apache2/sites-available/${siteURI}.conf\n\n- Reload Apache configuration: sudo service apache2 reload\n\n- Visit http://${siteURI}/install.php to finalize the installation of Drupal.`);\n      },\n    ];\n\n    // eslint-disable-next-line no-restricted-syntax\n    for (const fn of actions) {\n      // eslint-disable-next-line no-await-in-loop\n      await fn();\n    }\n  }\n}\n\n\n\n// WEBPACK FOOTER //\n// ./src/index.js","module.exports = require(\"path\");\n\n\n//////////////////\n// WEBPACK FOOTER\n// external \"path\"\n// module id = 3\n// module chunks = 0","module.exports = require(\"child_process\");\n\n\n//////////////////\n// WEBPACK FOOTER\n// external \"child_process\"\n// module id = 4\n// module chunks = 0","module.exports = require(\"util\");\n\n\n//////////////////\n// WEBPACK FOOTER\n// external \"util\"\n// module id = 5\n// module chunks = 0","module.exports = require(\"glob\");\n\n\n//////////////////\n// WEBPACK FOOTER\n// external \"glob\"\n// module id = 6\n// module chunks = 0","module.exports = require(\"yaml-js\");\n\n\n//////////////////\n// WEBPACK FOOTER\n// external \"yaml-js\"\n// module id = 7\n// module chunks = 0","var map = {\n\t\"./block.module.js\": 9,\n\t\"./comment.module.js\": 10\n};\nfunction webpackContext(req) {\n\treturn __webpack_require__(webpackContextResolve(req));\n};\nfunction webpackContextResolve(req) {\n\tvar id = map[req];\n\tif(!(id + 1)) // check for number or string\n\t\tthrow new Error(\"Cannot find module '\" + req + \"'.\");\n\treturn id;\n};\nwebpackContext.keys = function webpackContextKeys() {\n\treturn Object.keys(map);\n};\nwebpackContext.resolve = webpackContextResolve;\nmodule.exports = webpackContext;\nwebpackContext.id = 8;\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./src/implementations ^\\.\\/.*\\.js$\n// module id = 8\n// module chunks = 0","/* eslint-disable */\nexport function preprocess(variables, hook) {\n  // eslint-disable-next-line no-console\n  console.log('block implementation preprocess', hook);\n}\n\nexport function preprocess_block(variables) {\n  // eslint-disable-next-line no-console\n  console.log('block implementation preprocess_block');\n}\n\n\n\n// WEBPACK FOOTER //\n// ./src/implementations/block.module.js","/* eslint-disable */\nmodule.exports = {\n  preprocess: (variables, hook) => {\n    // eslint-disable-next-line no-console\n    console.log('comment implementation of preprocess', hook);\n  },\n};\n\n\n\n// WEBPACK FOOTER //\n// ./src/implementations/comment.module.js"],"sourceRoot":""}